// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleTracker.Data;
using VehicleTracker.Models;

namespace VehicleTracker.Migrations
{
    [DbContext(typeof(VehicleTrackerContext))]
    [Migration("25611205054033_add-vehicle-id-for-location")]
    partial class addvehicleidforlocation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehicleTracker.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Latitude");

                    b.Property<decimal>("Longitude");

                    b.Property<Guid>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Location");

                    b.HasData(
                        new { Id = new Guid("084c0323-b80a-484c-99a1-286462ffea03"), Latitude = 100m, Longitude = 200m, VehicleId = new Guid("62d65fe9-35d2-4529-983e-d8f92441dfd8") }
                    );
                });

            modelBuilder.Entity("VehicleTracker.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new { Id = new Guid("62d65fe9-35d2-4529-983e-d8f92441dfd8"), Name = "Mercedes" }
                    );
                });

            modelBuilder.Entity("VehicleTracker.Models.Location", b =>
                {
                    b.HasOne("VehicleTracker.Models.Vehicle", "Vehicle")
                        .WithMany("Locations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
